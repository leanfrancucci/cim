!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
ABBREVIATED	.\Console\COMMAND.H	27;"	d
ADC	.\Drivers\Ioports\iodefs.h	/^	ADC$/;"	e
ADC_BUFF_SIZE	.\Drivers\Platform\ADC\adc.h	10;"	d
ADC_CH0	.\Drivers\Platform\ADC\adc.h	/^	ADC_CH0,$/;"	e
ADC_CH1	.\Drivers\Platform\ADC\adc.h	/^	ADC_CH1,$/;"	e
ADC_CH2	.\Drivers\Platform\ADC\adc.h	/^	ADC_CH2,$/;"	e
ADC_CH3	.\Drivers\Platform\ADC\adc.h	/^	ADC_CH3,$/;"	e
ADC_CH4	.\Drivers\Platform\ADC\adc.h	/^	ADC_CH4,$/;"	e
ADC_CH5	.\Drivers\Platform\ADC\adc.h	/^	ADC_CH5,$/;"	e
ADC_CH6	.\Drivers\Platform\ADC\adc.h	/^	ADC_CH6,$/;"	e
ADC_CH7	.\Drivers\Platform\ADC\adc.h	/^	ADC_CH7,$/;"	e
ADC_K	.\Drivers\Platform\ADC\adc.h	13;"	d
ADC_RES	.\Drivers\Platform\ADC\adc.h	12;"	d
ADC_VREFH	.\Drivers\Platform\ADC\adc.h	/^	ADC_VREFH = 0x1E,$/;"	e
ADC_VREFL	.\Drivers\Platform\ADC\adc.h	/^	ADC_VREFL$/;"	e
ANALOG_PORT	.\Drivers\Platform\ADC\adc.h	9;"	d
B1200	.\Drivers\Serial\serdefs.h	/^	B300, B600, B1200, B2400, B4800, B9600, B19200,$/;"	e
B19200	.\Drivers\Serial\serdefs.h	/^	B300, B600, B1200, B2400, B4800, B9600, B19200,$/;"	e
B2400	.\Drivers\Serial\serdefs.h	/^	B300, B600, B1200, B2400, B4800, B9600, B19200,$/;"	e
B300	.\Drivers\Serial\serdefs.h	/^	B300, B600, B1200, B2400, B4800, B9600, B19200,$/;"	e
B38400	.\Drivers\Serial\serdefs.h	/^	B38400, B57600,$/;"	e
B4800	.\Drivers\Serial\serdefs.h	/^	B300, B600, B1200, B2400, B4800, B9600, B19200,$/;"	e
B57600	.\Drivers\Serial\serdefs.h	/^	B38400, B57600,$/;"	e
B600	.\Drivers\Serial\serdefs.h	/^	B300, B600, B1200, B2400, B4800, B9600, B19200,$/;"	e
B9600	.\Drivers\Serial\serdefs.h	/^	B300, B600, B1200, B2400, B4800, B9600, B19200,$/;"	e
BAD_CHANNEL	.\Drivers\Enaint\drverr.h	/^	BAD_CHANNEL,$/;"	e
BAD_CODE	.\Drivers\Enaint\drverr.h	/^	BAD_MAJOR, BAD_MINORS, BAD_CODE,$/;"	e
BAD_MAJOR	.\Drivers\Enaint\drverr.h	/^	BAD_MAJOR, BAD_MINORS, BAD_CODE,$/;"	e
BAD_MINORS	.\Drivers\Enaint\drverr.h	/^	BAD_MAJOR, BAD_MINORS, BAD_CODE,$/;"	e
BIT0	.\Drivers\Ioports\iodefs.h	35;"	d
BIT1	.\Drivers\Ioports\iodefs.h	36;"	d
BIT2	.\Drivers\Ioports\iodefs.h	37;"	d
BIT3	.\Drivers\Ioports\iodefs.h	38;"	d
BIT4	.\Drivers\Ioports\iodefs.h	39;"	d
BIT5	.\Drivers\Ioports\iodefs.h	40;"	d
BIT6	.\Drivers\Ioports\iodefs.h	41;"	d
BIT7	.\Drivers\Ioports\iodefs.h	42;"	d
BITS7	.\Drivers\Serial\serdefs.h	/^	BITS7, BITS8,$/;"	e
BITS8	.\Drivers\Serial\serdefs.h	/^	BITS7, BITS8,$/;"	e
BKGDPE	.\Drivers\Platform\COP\cop.c	14;"	d	file:
BWATCHDOG_TICK	.\Drivers\Watchdog\watchdog.c	14;"	d	file:
CBSIZE	.\Console\console.c	19;"	d	file:
CH0	.\Drivers\Serial\Phylay\sersw.h	/^	CH0, CH1, NUM_CHS$/;"	e
CH1	.\Drivers\Serial\Phylay\sersw.h	/^	CH0, CH1, NUM_CHS$/;"	e
CLRB_LMIN	.\Console\cmdset.h	24;"	d
CLRB_MAX_ARGS	.\Console\cmdset.h	22;"	d
CLRB_MIN_ARGS	.\Console\cmdset.h	23;"	d
CMD_TABLE	.\Console\COMMAND.H	/^} CMD_TABLE;$/;"	t
CMD_TBL_CLRB	.\Console\cmdset.h	25;"	d
CMD_TBL_ECHO	.\Console\COMMAND.C	44;"	d	file:
CMD_TBL_GETA	.\Console\cmdset.h	76;"	d
CMD_TBL_GETB	.\Console\cmdset.h	38;"	d
CMD_TBL_HELP	.\Console\COMMAND.C	27;"	d	file:
CMD_TBL_INP	.\Console\cmdset.h	63;"	d
CMD_TBL_OUTP	.\Console\cmdset.h	51;"	d
CMD_TBL_QUES	.\Console\COMMAND.C	38;"	d	file:
CMD_TBL_SETB	.\Console\cmdset.h	12;"	d
CMD_TBL_SHELL	.\Console\cmdshell.h	10;"	d
CMD_TBL_STAT	.\Console\cmdset.h	89;"	d
COM1CH	.\Drivers\Serial\serdefs.h	/^	COM1CH, COM2CH,$/;"	e
COM1_MAX_CH	.\Drivers\Serial\serdefs.h	10;"	d
COM1_QUEUE	.\Drivers\Serial\gsqueue\qdata.h	/^	COM1_QUEUE, COM2_QUEUE,$/;"	e
COM2CH	.\Drivers\Serial\serdefs.h	/^	COM1CH, COM2CH,$/;"	e
COM2_MAX_CH	.\Drivers\Serial\serdefs.h	11;"	d
COM2_QUEUE	.\Drivers\Serial\gsqueue\qdata.h	/^	COM1_QUEUE, COM2_QUEUE,$/;"	e
CONFIG_CMD_TIME	.\Console\console.h	11;"	d
CONFIG_CMD_TOUT	.\Console\console.h	9;"	d
CONFIG_CMD_TOUT_MIN	.\Console\console.h	10;"	d
COPE	.\Drivers\Platform\COP\cop.c	11;"	d	file:
COPT	.\Drivers\Platform\COP\cop.c	12;"	d	file:
CTRL_C	.\Console\console.c	/^	CTRL_C = 1, PARSING$/;"	e	file:
DELETE_CHAR	.\Console\console.h	8;"	d
ECHO	.\Console\COMMAND.H	33;"	d
ELEM_TYPE	.\Drivers\Serial\gsqueue\gsqueue.h	/^typedef MUInt ELEM_TYPE;$/;"	t
EMPTY_QUEUE	.\Drivers\Serial\gsqueue\gsqueue.h	/^	OK_QUEUE, EMPTY_QUEUE, FULL_QUEUE$/;"	e
ENA_WOUT_DISA	.\Drivers\Enaint\drverr.h	/^	INT_STK_OFLOW, ENA_WOUT_DISA,$/;"	e
ERRORS_NUM	.\Common\error\error.h	/^	ERRORS_NUM$/;"	e
ERR_OK	.\Drivers\Enaint\drverr.h	/^	ERR_OK,$/;"	e
EVEN_PAR	.\Drivers\Serial\serdefs.h	/^	NO_PAR, EVEN_PAR, ODD_PAR,$/;"	e
FE	.\Drivers\Platform\SCI\sci.c	18;"	d	file:
FLASH_BAD_WRITE	.\Drivers\Enaint\drverr.h	/^	FLASH_BAD_WRITE,$/;"	e
FULL_QUEUE	.\Drivers\Serial\gsqueue\gsqueue.h	/^	OK_QUEUE, EMPTY_QUEUE, FULL_QUEUE$/;"	e
GAIN_K	.\Drivers\Platform\ADC\adc.h	11;"	d
GETA_LMIN	.\Console\cmdset.h	75;"	d
GETA_MAX_ARGS	.\Console\cmdset.h	73;"	d
GETA_MIN_ARGS	.\Console\cmdset.h	74;"	d
GETB_LMIN	.\Console\cmdset.h	37;"	d
GETB_MAX_ARGS	.\Console\cmdset.h	35;"	d
GETB_MIN_ARGS	.\Console\cmdset.h	36;"	d
GSQUEUE	.\Drivers\Serial\gsqueue\gsqueue.h	/^} GSQUEUE;$/;"	t
HELP	.\Console\COMMAND.H	39;"	d
INPUT	.\Drivers\Ioports\iodefs.h	/^	INPUT,$/;"	e
INP_LMIN	.\Console\cmdset.h	62;"	d
INP_MAX_ARGS	.\Console\cmdset.h	60;"	d
INP_MIN_ARGS	.\Console\cmdset.h	61;"	d
INT_STK_OFLOW	.\Drivers\Enaint\drverr.h	/^	INT_STK_OFLOW, ENA_WOUT_DISA,$/;"	e
INVALID_OPT	.\Common\error\error.h	/^	INVALID_OPT,$/;"	e
INVALID_PINNUMBER	.\Common\error\error.h	/^	INVALID_PINNUMBER,$/;"	e
INVALID_PORTNUMBER	.\Common\error\error.h	/^	INVALID_PORTNUMBER,$/;"	e
Init	.\Start08.c	/^static void Init(void) {$/;"	f	file:	signature:(void)
LITTLE_ENDIAN	.\Common\utils\utils.h	10;"	d
LONGHELP	.\Console\COMMAND.H	21;"	d
MAIN_TIMER_TIME	.\Drivers\Maintime\config\mtimedef.h	12;"	d
MAXARGS	.\Console\COMMAND.H	14;"	d
MAX_CHARS_SERIAL	.\Common\utils\formats.h	10;"	d
MAX_INT_STACK	.\Drivers\Enaint\enaint.c	21;"	d	file:
MIN_PIN	.\Common\error\error.h	/^	MIN_PIN,$/;"	e
MIN_PORT	.\Common\error\error.h	/^	MIN_PORT,$/;"	e
MInt	.\Common\mytypes.h	/^typedef int				MInt;$/;"	t
MInt	.\Common\mytypes.h	/^typedef schar			MInt;$/;"	t
MK_CMD_TBL_ENTRY	.\Console\COMMAND.H	43;"	d
MK_CMD_TBL_ENTRY	.\Console\COMMAND.H	46;"	d
MUInt	.\Common\mytypes.h	/^typedef uchar			MUInt;$/;"	t
MUInt	.\Common\mytypes.h	/^typedef uint			MUInt;$/;"	t
MUST_ADC	.\Common\error\error.h	/^	MUST_ADC,$/;"	e
MUST_IO	.\Common\error\error.h	/^	MUST_IO,$/;"	e
NF	.\Drivers\Platform\SCI\sci.c	17;"	d	file:
NO_PAR	.\Drivers\Serial\serdefs.h	/^	NO_PAR, EVEN_PAR, ODD_PAR,$/;"	e
NUM_BAUD	.\Drivers\Serial\serdefs.h	/^	NUM_BAUD$/;"	e
NUM_BITS	.\Drivers\Serial\serdefs.h	/^	NUM_BITS$/;"	e
NUM_CHANNELS	.\Drivers\Serial\serdefs.h	/^	NUM_CHANNELS$/;"	e
NUM_CHS	.\Drivers\Serial\Phylay\sersw.h	/^	CH0, CH1, NUM_CHS$/;"	e
NUM_FATAL_ERRORS	.\Drivers\Enaint\drverr.h	/^	NUM_FATAL_ERRORS$/;"	e
NUM_PAR	.\Drivers\Serial\serdefs.h	/^	NUM_PAR$/;"	e
NUM_PORTS	.\Drivers\Ioports\porthdl.h	/^	NUM_PORTS$/;"	e
NUM_QUEUES	.\Drivers\Serial\gsqueue\qdata.h	/^	NUM_QUEUES$/;"	e
NUM_TIMER_DIVISORS	.\Drivers\Maintime\config\mtimedef.h	20;"	d
NVFLASH_PART_OVER	.\Drivers\Enaint\drverr.h	/^	NVFLASH_PART_OVER,$/;"	e
NVFLASH_PAR_OVFLOW	.\Drivers\Enaint\drverr.h	/^	NVFLASH_PAR_OVFLOW,$/;"	e
ODD_PAR	.\Drivers\Serial\serdefs.h	/^	NO_PAR, EVEN_PAR, ODD_PAR,$/;"	e
OK_QUEUE	.\Drivers\Serial\gsqueue\gsqueue.h	/^	OK_QUEUE, EMPTY_QUEUE, FULL_QUEUE$/;"	e
OUTPUT	.\Drivers\Ioports\iodefs.h	/^	OUTPUT,$/;"	e
OUTP_LMIN	.\Console\cmdset.h	50;"	d
OUTP_MAX_ARGS	.\Console\cmdset.h	48;"	d
OUTP_MIN_ARGS	.\Console\cmdset.h	49;"	d
OVRN	.\Drivers\Platform\SCI\sci.c	16;"	d	file:
PARSING	.\Console\console.c	/^	CTRL_C = 1, PARSING$/;"	e	file:
PE	.\Drivers\Platform\SCI\sci.c	19;"	d	file:
PIN_MUSTOUT	.\Common\error\error.h	/^	PIN_MUSTOUT,$/;"	e
PIN_TABLE	.\Drivers\Ioports\iodefs.h	/^} PIN_TABLE;$/;"	t
PORT0	.\Drivers\Ioports\porthdl.h	/^	PORT0,$/;"	e
PORT0_DATA	.\Drivers\Platform\IO\ioportsl.h	28;"	d
PORT0_DIR	.\Drivers\Platform\IO\ioportsl.h	29;"	d
PORT0_PUP	.\Drivers\Platform\IO\ioportsl.h	30;"	d
PORT1	.\Drivers\Ioports\porthdl.h	/^	PORT1,$/;"	e
PORT1_DATA	.\Drivers\Platform\IO\ioportsl.h	32;"	d
PORT1_DIR	.\Drivers\Platform\IO\ioportsl.h	33;"	d
PORT1_PUP	.\Drivers\Platform\IO\ioportsl.h	34;"	d
PORT2	.\Drivers\Ioports\porthdl.h	/^	PORT2,$/;"	e
PORT2_DATA	.\Drivers\Platform\IO\ioportsl.h	36;"	d
PORT2_DIR	.\Drivers\Platform\IO\ioportsl.h	37;"	d
PORT2_PUP	.\Drivers\Platform\IO\ioportsl.h	38;"	d
PORT3	.\Drivers\Ioports\porthdl.h	/^	PORT3,$/;"	e
PORT3_DATA	.\Drivers\Platform\IO\ioportsl.h	40;"	d
PORT3_DIR	.\Drivers\Platform\IO\ioportsl.h	41;"	d
PORT3_PUP	.\Drivers\Platform\IO\ioportsl.h	42;"	d
PORT4	.\Drivers\Ioports\porthdl.h	/^	PORT4,$/;"	e
PORT4_DATA	.\Drivers\Platform\IO\ioportsl.h	44;"	d
PORT4_DIR	.\Drivers\Platform\IO\ioportsl.h	45;"	d
PORT4_PUP	.\Drivers\Platform\IO\ioportsl.h	46;"	d
PORT5	.\Drivers\Ioports\porthdl.h	/^	PORT5,$/;"	e
PORT5_DATA	.\Drivers\Platform\IO\ioportsl.h	48;"	d
PORT5_DIR	.\Drivers\Platform\IO\ioportsl.h	49;"	d
PORT5_PUP	.\Drivers\Platform\IO\ioportsl.h	50;"	d
PORT6	.\Drivers\Ioports\porthdl.h	/^	PORT6,$/;"	e
PORT6_DATA	.\Drivers\Platform\IO\ioportsl.h	52;"	d
PORT6_DIR	.\Drivers\Platform\IO\ioportsl.h	53;"	d
PORT6_PUP	.\Drivers\Platform\IO\ioportsl.h	54;"	d
PORT_STR	.\Drivers\Platform\IO\ioportsl.h	/^}PORT_STR;$/;"	t
PORT_TABLE	.\Drivers\Ioports\iodefs.h	/^} PORT_TABLE;$/;"	t
PRINT_FORMATS	.\Console\console.h	7;"	d
PROMPT_LEN	.\Console\console.c	25;"	d	file:
QCODES	.\Drivers\Serial\gsqueue\gsqueue.h	/^} QCODES;$/;"	t
QHDLR	.\Drivers\Serial\gsqueue\gsqueue.h	/^typedef MUInt QHDLR;$/;"	t
Q_HDLER	.\Drivers\Serial\gsqueue\qdata.h	/^}Q_HDLER;$/;"	t
RESP_DELAY	.\Console\cmdset.c	20;"	d	file:
RTI_DISABLE	.\Drivers\Platform\RTI\rti.h	/^	RTI_DISABLE, RTI_ENABLE$/;"	e
RTI_ENABLE	.\Drivers\Platform\RTI\rti.h	/^	RTI_DISABLE, RTI_ENABLE$/;"	e
SCI_CALLBACK	.\Drivers\Platform\SCI\sci.h	/^typedef void(*SCI_CALLBACK)( MUInt );$/;"	t
SERIAL_T	.\Drivers\Serial\serdefs.h	/^} SERIAL_T;$/;"	t
SETB_LMIN	.\Console\cmdset.h	11;"	d
SETB_MAX_ARGS	.\Console\cmdset.h	9;"	d
SETB_MIN_ARGS	.\Console\cmdset.h	10;"	d
SLEEP_BASE	.\Drivers\Sleep\sleep.h	12;"	d
STAT_LMIN	.\Console\cmdset.h	88;"	d
STAT_MAX_ARGS	.\Console\cmdset.h	86;"	d
STAT_MIN_ARGS	.\Console\cmdset.h	87;"	d
STOPE	.\Drivers\Platform\COP\cop.c	13;"	d	file:
TIMER_CHAIN	.\Drivers\Maintime\mtimetyp.h	/^} TIMER_CHAIN;$/;"	t
TORCV	.\Drivers\Serial\Phylay\phylay.h	/^	TORCV, TOXMIT$/;"	e
TOXMIT	.\Drivers\Serial\Phylay\phylay.h	/^	TORCV, TOXMIT$/;"	e
UC_B1200	.\Drivers\Platform\SCI\sci.h	21;"	d
UC_B1200	.\Drivers\Platform\SCI\sci.h	33;"	d
UC_B19200	.\Drivers\Platform\SCI\sci.h	25;"	d
UC_B19200	.\Drivers\Platform\SCI\sci.h	37;"	d
UC_B2400	.\Drivers\Platform\SCI\sci.h	22;"	d
UC_B2400	.\Drivers\Platform\SCI\sci.h	34;"	d
UC_B300	.\Drivers\Platform\SCI\sci.h	19;"	d
UC_B300	.\Drivers\Platform\SCI\sci.h	31;"	d
UC_B38400	.\Drivers\Platform\SCI\sci.h	26;"	d
UC_B38400	.\Drivers\Platform\SCI\sci.h	38;"	d
UC_B4800	.\Drivers\Platform\SCI\sci.h	23;"	d
UC_B4800	.\Drivers\Platform\SCI\sci.h	35;"	d
UC_B57600	.\Drivers\Platform\SCI\sci.h	27;"	d
UC_B57600	.\Drivers\Platform\SCI\sci.h	39;"	d
UC_B600	.\Drivers\Platform\SCI\sci.h	20;"	d
UC_B600	.\Drivers\Platform\SCI\sci.h	32;"	d
UC_B9600	.\Drivers\Platform\SCI\sci.h	24;"	d
UC_B9600	.\Drivers\Platform\SCI\sci.h	36;"	d
WATCHDOG_BASE	.\Drivers\Watchdog\watchdog.h	11;"	d
WATCHDOG_TICK	.\Drivers\Watchdog\watchdog.h	16;"	d
_1SEC	.\Drivers\Sleep\sleep.h	11;"	d
_COPY_L	.\Start08.c	/^__EXTERN_C extern void _COPY_L(void);$/;"	p	file:	signature:(void)
_COP_H_	.\Drivers\Platform\COP\cop.h	8;"	d
_ICG_H_	.\Drivers\Platform\ICG\icg.h	11;"	d
_LVD_H_	.\Drivers\Platform\LVD\lvd.h	9;"	d
_Startup	.\Start08.c	/^__EXTERN_C void _Startup(void) {$/;"	f	signature:(void)
__8MHz__	.\Drivers\Platform\SCI\sci.h	16;"	d
__COMMAND_H__	.\Console\COMMAND.H	6;"	d
__CONSER_H__	.\Console\conser.h	10;"	d
__DRIVERS_H__	.\Drivers\drivers.h	9;"	d
__EXTERN_C	.\Start08.c	36;"	d	file:
__EXTERN_C	.\Start08.c	38;"	d	file:
__FEED_COP_IN_HLI	.\Start08.c	42;"	d	file:
__FEED_COP_IN_HLI	.\Start08.c	44;"	d	file:
__FORMATS_H__	.\Common\utils\formats.h	6;"	d
__GSQUEUE__H__	.\Drivers\Serial\gsqueue\gsqueue.h	7;"	d
__INITSYS_H__	.\Init\initsys.h	5;"	d
__IODEFS_H__	.\Drivers\Ioports\iodefs.h	6;"	d
__IOPORTSL_H__	.\Drivers\Platform\IO\ioportsl.h	11;"	d
__MYTYPES_H__	.\Common\mytypes.h	6;"	d
__NO_FLAGS_OFFSET	.\Start08.c	18;"	d	file:
__NO_MAIN_OFFSET	.\Start08.c	19;"	d	file:
__PHYLAY_H__	.\Drivers\Serial\Phylay\phylay.h	6;"	d
__PLATFORM_H__	.\Drivers\Platform\platform.h	11;"	d
__PORTHDL_H__	.\Drivers\Ioports\porthdl.h	6;"	d
__QDATA_H__	.\Drivers\Serial\gsqueue\qdata.h	5;"	d
__RESET_H__	.\Drivers\Watchdog\reset.h	9;"	d
__RTI_H__	.\Drivers\Platform\RTI\rti.h	10;"	d
__SCI_H__	.\Drivers\Platform\SCI\sci.h	10;"	d
__SERDEFS_H__	.\Drivers\Serial\serdefs.h	6;"	d
__SERSW_H__	.\Drivers\Serial\Phylay\sersw.h	6;"	d
__SLEEP_H__	.\Drivers\Sleep\sleep.h	9;"	d
__SLOGCOM1_H__	.\Drivers\Serial\slogcom1.h	6;"	d
__SLOGCOM2_H__	.\Drivers\Serial\slogcom2.h	6;"	d
__UTILS_H__	.\Common\utils\utils.h	6;"	d
__WATCHDOG_H__	.\Drivers\Watchdog\watchdog.h	9;"	d
_reset_mcu	.\Drivers\Platform\RTI\rti.c	20;"	d	file:
_reset_mcu	.\Drivers\Watchdog\watchdog.c	18;"	d	file:
_startupData	.\Start08.c	/^struct _tagStartup _startupData;    \/* read-only:$/;"	v
abort_shell	.\Console\console.c	/^static MUInt abort_shell;$/;"	v	file:
acknowledge_irqs	.\Drivers\Platform\platform.c	/^acknowledge_irqs( void )$/;"	f	signature:( void )
acknowledge_irqs	.\Drivers\Platform\platform.h	/^void acknowledge_irqs( void );$/;"	p	signature:( void )
actions_100	.\Drivers\Maintime\config\mtimetbl.c	/^static void(* const actions_100[])( void ) =$/;"	v	file:
actions_2	.\Drivers\Maintime\config\mtimetbl.c	/^static void(* const actions_2[])( void ) =$/;"	v	file:
actions_20	.\Drivers\Maintime\config\mtimetbl.c	/^static void(* const actions_20[])( void ) =$/;"	v	file:
adc2ascci	.\Common\utils\formats.c	/^adc2ascci( int val )$/;"	f	signature:( int val )
adc2ascci	.\Common\utils\formats.h	/^char *adc2ascci( int val );$/;"	p	signature:( int val )
adc_init	.\Drivers\Platform\ADC\adc.c	/^adc_init( void )$/;"	f	signature:( void )
adc_init	.\Drivers\Platform\ADC\adc.h	/^void adc_init( void );$/;"	p	signature:( void )
adquire_adc	.\Drivers\Platform\ADC\adc.c	/^adquire_adc( MUInt mask )$/;"	f	signature:( MUInt mask )
adquire_adc	.\Drivers\Platform\ADC\adc.h	/^unsigned short adquire_adc( MUInt mask );$/;"	p	signature:( MUInt mask )
alias	.\Drivers\Ioports\iodefs.h	/^	char* alias;$/;"	m
argv	.\Console\console.c	/^static char *argv[ MAXARGS + 1 ];$/;"	v	file:
baud	.\Drivers\Serial\serdefs.h	/^	MUInt baud;$/;"	m
bitf	.\Common\mytypes.h	/^typedef uint			bitf;$/;"	t
bitf	.\Common\mytypes.h	/^typedef ushort			bitf;$/;"	t
bits	.\Drivers\Serial\serdefs.h	/^	MUInt bits;$/;"	m
buff	.\Common\utils\formats.c	/^static char buff[ MAX_CHARS_SERIAL ];$/;"	v	file:
check_sleep	.\Drivers\Sleep\sleep.c	/^check_sleep( void )$/;"	f	signature:( void )
check_sleep	.\Drivers\Sleep\sleep.h	/^void check_sleep( void );$/;"	p	signature:( void )
check_watchdog	.\Drivers\Watchdog\watchdog.c	/^check_watchdog( void )$/;"	f	signature:( void )
check_watchdog	.\Drivers\Watchdog\watchdog.h	/^void check_watchdog( void );$/;"	p	signature:( void )
clear_output	.\Drivers\Ioports\ioports.c	/^clear_output( const PIN_TABLE *ppin, const PORT_TABLE *pport )$/;"	f	signature:( const PIN_TABLE *ppin, const PORT_TABLE *pport )
clear_output	.\Drivers\Ioports\ioports.h	/^MInt clear_output( const PIN_TABLE *ppin, const PORT_TABLE *pport );$/;"	p	signature:( const PIN_TABLE *ppin, const PORT_TABLE *pport )
clear_output_hdl	.\Drivers\Ioports\porthdl.c	/^clear_output_hdl( MUInt mcu_port, MUInt mask )$/;"	f	signature:( MUInt mcu_port, MUInt mask )
clear_output_hdl	.\Drivers\Ioports\porthdl.h	/^MInt clear_output_hdl( MUInt mcu_port, MUInt mask );$/;"	p	signature:( MUInt mcu_port, MUInt mask )
cmd	.\Console\COMMAND.H	/^	MInt (*cmd)( const struct cmd_tbl_s *tbl, MInt argc, char *argv[] );$/;"	m	struct:cmd_tbl_s
cmd_tbl	.\Console\COMMAND.C	/^static const CMD_TABLE cmd_tbl[] =$/;"	v	file:
cmd_tbl_s	.\Console\COMMAND.H	/^typedef struct cmd_tbl_s$/;"	s
col	.\Console\console.c	/^static MUInt col;$/;"	v	file:
com1_init	.\Drivers\Serial\slogcom1.c	/^com1_init( const SERIAL_T *p )$/;"	f	signature:( const SERIAL_T *p )
com1_init	.\Drivers\Serial\slogcom1.h	/^void com1_init( const SERIAL_T *p );$/;"	p	signature:( const SERIAL_T *p )
com1_rcv_isr	.\Drivers\Platform\SCI\sci.c	/^com1_rcv_isr( void )$/;"	f	signature:( void )
com1_sci1_init	.\Drivers\Platform\SCI\sci.c	/^com1_sci1_init( unsigned short baud_rate )$/;"	f	signature:( unsigned short baud_rate )
com1_sci1_init	.\Drivers\Platform\SCI\sci.h	/^void com1_sci1_init( unsigned short baud_rate );$/;"	p	signature:( unsigned short baud_rate )
com1_sci1_sendchar	.\Drivers\Platform\SCI\sci.c	/^com1_sci1_sendchar( unsigned char c )$/;"	f	signature:( unsigned char c )
com1_sci1_sendchar	.\Drivers\Platform\SCI\sci.h	/^void com1_sci1_sendchar( unsigned char c );$/;"	p	signature:( unsigned char c )
com1_sci1_setbd	.\Drivers\Platform\SCI\sci.c	/^com1_sci1_setbd( unsigned short baud_rate )$/;"	f	signature:( unsigned short baud_rate )
com1_sci1_setbd	.\Drivers\Platform\SCI\sci.h	/^void com1_sci1_setbd( unsigned short baud_rate );$/;"	p	signature:( unsigned short baud_rate )
com1_sendchar	.\Drivers\Serial\slogcom1.c	/^com1_sendchar( unsigned char c )$/;"	f	signature:( unsigned char c )
com1_sendchar	.\Drivers\Serial\slogcom1.h	/^void com1_sendchar( unsigned char c );$/;"	p	signature:( unsigned char c )
com1_setbd	.\Drivers\Serial\slogcom1.c	/^com1_setbd( MUInt bd )$/;"	f	signature:( MUInt bd )
com1_setbd	.\Drivers\Serial\slogcom1.h	/^void com1_setbd( MUInt bd );$/;"	p	signature:( MUInt bd )
com1rx_queue	.\Drivers\Serial\sertable.c	/^unsigned char com1rx_queue[ COM1_MAX_CH ];$/;"	v
com2_init	.\Drivers\Serial\slogcom2.c	/^com2_init( const SERIAL_T *p )$/;"	f	signature:( const SERIAL_T *p )
com2_init	.\Drivers\Serial\slogcom2.h	/^void com2_init( const SERIAL_T *p );$/;"	p	signature:( const SERIAL_T *p )
com2_rcv_isr	.\Drivers\Platform\SCI\sci.c	/^com2_rcv_isr( void )$/;"	f	signature:( void )
com2_sci2_init	.\Drivers\Platform\SCI\sci.c	/^com2_sci2_init( unsigned short baud_rate )$/;"	f	signature:( unsigned short baud_rate )
com2_sci2_init	.\Drivers\Platform\SCI\sci.h	/^void com2_sci2_init( unsigned short baud_rate );$/;"	p	signature:( unsigned short baud_rate )
com2_sci2_sendchar	.\Drivers\Platform\SCI\sci.c	/^com2_sci2_sendchar( unsigned char c )$/;"	f	signature:( unsigned char c )
com2_sci2_sendchar	.\Drivers\Platform\SCI\sci.h	/^void com2_sci2_sendchar( unsigned char c );$/;"	p	signature:( unsigned char c )
com2_sci2_setbd	.\Drivers\Platform\SCI\sci.c	/^com2_sci2_setbd( unsigned short baud_rate )$/;"	f	signature:( unsigned short baud_rate )
com2_sci2_setbd	.\Drivers\Platform\SCI\sci.h	/^void com2_sci2_setbd( unsigned short baud_rate );$/;"	p	signature:( unsigned short baud_rate )
com2_sendchar	.\Drivers\Serial\slogcom2.c	/^com2_sendchar( unsigned char c )$/;"	f	signature:( unsigned char c )
com2_sendchar	.\Drivers\Serial\slogcom2.h	/^void com2_sendchar( unsigned char c );$/;"	p	signature:( unsigned char c )
com2_setbd	.\Drivers\Serial\slogcom2.c	/^com2_setbd( MUInt bd )$/;"	f	signature:( MUInt bd )
com2_setbd	.\Drivers\Serial\slogcom2.h	/^void com2_setbd( MUInt bd );$/;"	p	signature:( MUInt bd )
com2rx_queue	.\Drivers\Serial\sertable.c	/^unsigned char com2rx_queue[ COM2_MAX_CH ];$/;"	v
command_shell	.\Console\console.c	/^command_shell( void )$/;"	f	signature:( void )
command_shell	.\Console\console.h	/^void command_shell( void );$/;"	p	signature:( void )
conser_getc	.\Console\CONSER.C	/^conser_getc( void )$/;"	f	signature:( void )
conser_getc	.\Console\conser.h	/^MUInt conser_getc( void );$/;"	p	signature:( void )
conser_init	.\Console\CONSER.C	/^conser_init( void )$/;"	f	signature:( void )
conser_init	.\Console\conser.h	/^void conser_init( void );$/;"	p	signature:( void )
conser_putc	.\Console\CONSER.C	/^conser_putc( const char c )$/;"	f	signature:( const char c )
conser_putc	.\Console\conser.h	/^void conser_putc( const char c );$/;"	p	signature:( const char c )
conser_puts	.\Console\CONSER.C	/^conser_puts( const char *s )$/;"	f	signature:( const char *s )
conser_puts	.\Console\conser.h	/^void conser_puts( const char *s );$/;"	p	signature:( const char *s )
conser_tstc	.\Console\CONSER.C	/^conser_tstc( void )$/;"	f	signature:( void )
conser_tstc	.\Console\conser.h	/^MUInt conser_tstc( void );$/;"	p	signature:( void )
console_buffer	.\Console\console.c	/^static char console_buffer[ CBSIZE ];$/;"	v	file:
conv_endians	.\Common\utils\utils.c	/^conv_endians( void *to, const void *from, MUInt qty )$/;"	f	signature:( void *to, const void *from, MUInt qty )
conv_endians	.\Common\utils\utils.h	/^void conv_endians( void *to, const void *from, MUInt qty );$/;"	p	signature:( void *to, const void *from, MUInt qty )
cop_init	.\Drivers\Platform\COP\cop.c	/^cop_init( void )$/;"	f	signature:( void )
cop_init	.\Drivers\Platform\COP\cop.h	/^void cop_init( void );$/;"	p	signature:( void )
data	.\Drivers\Platform\IO\ioportsl.h	/^	unsigned char data;$/;"	m
delete_char	.\Console\console.c	/^delete_char( char *buffer, char *p, MUInt *colp, MUInt *np )$/;"	f	file:	signature:( char *buffer, char *p, MUInt *colp, MUInt *np )
deplete_gsqueue	.\Drivers\Serial\gsqueue\gsqueue.c	/^deplete_gsqueue( QHDLR qh )$/;"	f	signature:( QHDLR qh )
deplete_gsqueue	.\Drivers\Serial\gsqueue\gsqueue.h	/^void deplete_gsqueue( QHDLR qh );$/;"	p	signature:( QHDLR qh )
dir	.\Drivers\Ioports\iodefs.h	/^	MUInt dir;$/;"	m
dir	.\Drivers\Platform\IO\ioportsl.h	/^	unsigned char dir;$/;"	m
disable_gral_interrupt	.\Drivers\Enaint\enaint.c	/^disable_gral_interrupt( void )$/;"	f	signature:( void )
disable_gral_interrupt	.\Drivers\Enaint\enaint.h	/^void disable_gral_interrupt( void );$/;"	p	signature:( void )
disable_interrupt	.\Drivers\Enaint\lowint.c	/^disable_interrupt( void )$/;"	f	signature:( void )
disable_interrupt	.\Drivers\Enaint\lowint.h	/^void disable_interrupt( void );$/;"	p	signature:( void )
do_clear	.\Console\cmdset.c	/^do_clear( const CMD_TABLE *p, MInt argc, char *argv[] )$/;"	f	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_clear	.\Console\cmdset.h	/^MInt do_clear( const CMD_TABLE *p, MInt argc, char *argv[] );$/;"	p	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_console	.\Console\console.c	/^do_console( void )$/;"	f	file:	signature:( void )
do_echo	.\Console\COMMAND.C	/^do_echo( const CMD_TABLE *cmdtp, MInt argc, char *argv[] )$/;"	f	file:	signature:( const CMD_TABLE *cmdtp, MInt argc, char *argv[] )
do_echo	.\Console\COMMAND.C	/^static MInt do_echo( const CMD_TABLE *cmdtp, MInt argc, char *argv[] ),$/;"	p	file:	signature:( const CMD_TABLE *cmdtp, MInt argc, char *argv[] )
do_geta	.\Console\cmdset.c	/^do_geta( const CMD_TABLE *p, MInt argc, char *argv[] )$/;"	f	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_geta	.\Console\cmdset.h	/^MInt do_geta( const CMD_TABLE *p, MInt argc, char *argv[] );$/;"	p	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_getb	.\Console\cmdset.c	/^do_getb( const CMD_TABLE *p, MInt argc, char *argv[] )$/;"	f	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_getb	.\Console\cmdset.h	/^MInt do_getb( const CMD_TABLE *p, MInt argc, char *argv[] );$/;"	p	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_help	.\Console\COMMAND.C	/^			do_help( const CMD_TABLE *cmdtp, MInt argc, char *argv[] );$/;"	p	file:	signature:( const CMD_TABLE *cmdtp, MInt argc, char *argv[] )
do_help	.\Console\COMMAND.C	/^do_help( const CMD_TABLE *cmdtp, MInt argc, char *argv[] )$/;"	f	file:	signature:( const CMD_TABLE *cmdtp, MInt argc, char *argv[] )
do_inport	.\Console\cmdset.c	/^do_inport( const CMD_TABLE *p, MInt argc, char *argv[] )$/;"	f	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_inport	.\Console\cmdset.h	/^MInt do_inport( const CMD_TABLE *p, MInt argc, char *argv[] );$/;"	p	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_outport	.\Console\cmdset.c	/^do_outport( const CMD_TABLE *p, MInt argc, char *argv[] )$/;"	f	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_outport	.\Console\cmdset.h	/^MInt do_outport( const CMD_TABLE *p, MInt argc, char *argv[] );$/;"	p	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_set	.\Console\cmdset.c	/^do_set( const CMD_TABLE *p, MInt argc, char *argv[] )$/;"	f	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_set	.\Console\cmdset.h	/^MInt do_set( const CMD_TABLE *p, MInt argc, char *argv[] );$/;"	p	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_shell	.\Console\cmdshell.c	/^do_shell( const CMD_TABLE *p, MInt argc, char *argv[] )$/;"	f	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_shell	.\Console\cmdshell.h	/^MInt do_shell( const CMD_TABLE *p, MInt argc, char *argv[] );$/;"	p	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_status	.\Console\cmdset.c	/^do_status( const CMD_TABLE *p, MInt argc, char *argv[] )$/;"	f	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
do_status	.\Console\cmdset.h	/^MInt do_status( const CMD_TABLE *p, MInt argc, char *argv[] );$/;"	p	signature:( const CMD_TABLE *p, MInt argc, char *argv[] )
drivers_init	.\Drivers\drivers.c	/^drivers_init(void)$/;"	f	signature:(void)
drivers_init	.\Drivers\drivers.h	/^void drivers_init(void);$/;"	p	signature:(void)
elem_qty	.\Drivers\Serial\gsqueue\gsqueue.h	/^	MUInt elem_qty;$/;"	m
enable_gral_interrupt	.\Drivers\Enaint\enaint.c	/^enable_gral_interrupt( void )$/;"	f	signature:( void )
enable_gral_interrupt	.\Drivers\Enaint\enaint.h	/^void enable_gral_interrupt( void );$/;"	p	signature:( void )
enable_interrupt	.\Drivers\Enaint\lowint.c	/^enable_interrupt( void )$/;"	f	signature:( void )
enable_interrupt	.\Drivers\Enaint\lowint.h	/^void enable_interrupt( void );$/;"	p	signature:( void )
enable_maintime	.\Drivers\Platform\RTI\rti.c	/^static MUInt enable_maintime = 1;$/;"	v	file:
eoq	.\Drivers\Serial\gsqueue\gsqueue.c	10;"	d	file:
erase_seq	.\Console\console.c	/^static const char erase_seq[] = "\\b \\b";$/;"	v	file:
error_tbl	.\Common\error\error.c	/^static const char *error_tbl[ERRORS_NUM] =$/;"	v	file:
execute_list	.\Drivers\Maintime\maintime.c	/^execute_list( void (* const *p)( void ) )$/;"	f	file:	signature:( void (* const *p)( void ) )
fatal	.\Drivers\Enaint\drverr.c	/^fatal( char *file, int line, MUInt error )$/;"	f	signature:( char *file, int line, MUInt error )
fatal	.\Drivers\Enaint\drverr.h	/^void fatal( char *file, int line, MUInt error );$/;"	p	signature:( char *file, int line, MUInt error )
fatal_driver	.\Drivers\Enaint\drverr.h	30;"	d
find_cmd	.\Console\COMMAND.C	/^find_cmd( const char *cmd )$/;"	f	signature:( const char *cmd )
find_cmd	.\Console\COMMAND.H	/^const CMD_TABLE *find_cmd( const char *cmd );$/;"	p	signature:( const char *cmd )
find_pin	.\Drivers\Ioports\ioports.c	/^find_pin( const char *pin, void ** pport )$/;"	f	signature:( const char *pin, void ** pport )
find_pin	.\Drivers\Ioports\ioports.h	/^const PIN_TABLE * find_pin( const char *pin, void ** pport );$/;"	p	signature:( const char *pin, void ** pport )
find_port	.\Drivers\Ioports\ioports.c	/^find_port( const char *port )$/;"	f	signature:( const char *port )
find_port	.\Drivers\Ioports\ioports.h	/^const PORT_TABLE * find_port( const char *port );$/;"	p	signature:( const char *port )
forever	.\Console\console.c	446;"	d	file:
forever	.\main.c	11;"	d	file:
get_char	.\Drivers\Serial\serial.c	/^get_char( MUInt channel, unsigned char *p )$/;"	f	signature:( MUInt channel, unsigned char *p )
get_char	.\Drivers\Serial\serial.h	/^MInt get_char( MUInt channel, unsigned char *p );$/;"	p	signature:( MUInt channel, unsigned char *p )
get_checksum	.\Common\utils\utils.c	/^get_checksum( void *p, MUInt qty )$/;"	f	signature:( void *p, MUInt qty )
get_checksum	.\Common\utils\utils.h	/^unsigned char get_checksum( void *p, MUInt qty );$/;"	p	signature:( void *p, MUInt qty )
get_enable_status	.\Drivers\Enaint\lowint.c	/^get_enable_status( void )$/;"	f	signature:( void )
get_enable_status	.\Drivers\Enaint\lowint.h	/^MUInt get_enable_status( void );$/;"	p	signature:( void )
get_gsq_qty	.\Drivers\Serial\gsqueue\gsqueue.c	/^get_gsq_qty( QHDLR qh )$/;"	f	signature:( QHDLR qh )
get_gsq_qty	.\Drivers\Serial\gsqueue\gsqueue.h	/^MUInt get_gsq_qty( QHDLR qh );$/;"	p	signature:( QHDLR qh )
gsqueues	.\Drivers\Serial\gsqueue\qdata.c	/^GSQUEUE gsqueues[] =$/;"	v
help	.\Console\COMMAND.H	/^	char *help;			\/* Help  message	(long)		*\/$/;"	m	struct:cmd_tbl_s
hightxt	.\Drivers\Ioports\iodefs.h	/^	char* hightxt;$/;"	m
icg_init	.\Drivers\Platform\ICG\icg.c	/^icg_init( void )$/;"	f	signature:( void )
icg_init	.\Drivers\Platform\ICG\icg.h	/^void icg_init( void );$/;"	p	signature:( void )
init_command_shell	.\Console\console.c	/^init_command_shell( void )$/;"	f	signature:( void )
init_command_shell	.\Console\console.h	/^void init_command_shell( void );$/;"	p	signature:( void )
init_int_handler	.\Drivers\Enaint\enaint.c	/^init_int_handler( void )$/;"	f	signature:( void )
init_int_handler	.\Drivers\Enaint\enaint.h	/^void init_int_handler( void );$/;"	p	signature:( void )
init_main_timer_interrupt	.\Drivers\Maintime\maintime.c	/^init_main_timer_interrupt( void )$/;"	f	signature:( void )
init_main_timer_interrupt	.\Drivers\Maintime\maintime.h	/^void init_main_timer_interrupt( void );$/;"	p	signature:( void )
init_phymed	.\Drivers\Serial\Phylay\phylay.c	/^init_phymed( void )$/;"	f	signature:( void )
init_phymed	.\Drivers\Serial\Phylay\phylay.h	/^void init_phymed( void );$/;"	p	signature:( void )
init_serlog	.\Drivers\Serial\serlog.c	/^init_serlog( MUInt channel, const SERIAL_T *p )$/;"	f	signature:( MUInt channel, const SERIAL_T *p )
init_serlog	.\Drivers\Serial\serlog.h	/^void init_serlog( MUInt channel, const SERIAL_T *p );$/;"	p	signature:( MUInt channel, const SERIAL_T *p )
init_sersw	.\Drivers\Serial\Phylay\sersw.c	/^init_sersw( void )$/;"	f	signature:( void )
init_sersw	.\Drivers\Serial\Phylay\sersw.h	/^void init_sersw( void );$/;"	p	signature:( void )
init_stack	.\Drivers\Enaint\enaint.c	/^init_stack( void )$/;"	f	file:	signature:( void )
init_system	.\Init\initsys.c	/^init_system( void )$/;"	f	signature:( void )
init_system	.\Init\initsys.h	/^void init_system( void );$/;"	p	signature:( void )
init_timer_hardware	.\Drivers\Maintime\config\irqtime.h	/^void init_timer_hardware( unsigned short irq_time );$/;"	p	signature:( unsigned short irq_time )
init_timer_hardware	.\Drivers\Platform\RTI\rti.c	/^init_timer_hardware( unsigned short irq_time )$/;"	f	signature:( unsigned short irq_time )
inport	.\Drivers\Ioports\ioports.c	/^inport( const PORT_TABLE *pport, unsigned char *value )$/;"	f	signature:( const PORT_TABLE *pport, unsigned char *value )
inport	.\Drivers\Ioports\ioports.h	/^MInt inport( const PORT_TABLE *pport, unsigned char *value );$/;"	p	signature:( const PORT_TABLE *pport, unsigned char *value )
inport_hdl	.\Drivers\Ioports\porthdl.c	/^inport_hdl( MUInt mcu_port, unsigned char *value )$/;"	f	signature:( MUInt mcu_port, unsigned char *value )
inport_hdl	.\Drivers\Ioports\porthdl.h	/^MInt inport_hdl( MUInt mcu_port, unsigned char *value );$/;"	p	signature:( MUInt mcu_port, unsigned char *value )
int_stack	.\Drivers\Enaint\enaint.c	/^static signed char int_stack[ MAX_INT_STACK ], *pint;$/;"	v	file:
irqf	.\Drivers\Platform\RTI\rti.c	/^static const unsigned short irqf[]=$/;"	v	file:
is_cmd_timeout	.\Console\contick.c	9;"	d	file:
is_cmd_timeout	.\Console\contick.h	8;"	d
is_empty_gsqueue	.\Drivers\Serial\gsqueue\gsqueue.c	/^is_empty_gsqueue( QHDLR qh )$/;"	f	signature:( QHDLR qh )
is_empty_gsqueue	.\Drivers\Serial\gsqueue\gsqueue.h	/^MUInt is_empty_gsqueue( QHDLR qh );$/;"	p	signature:( QHDLR qh )
kick_watchdog	.\Drivers\Watchdog\watchdog.c	/^kick_watchdog( void )$/;"	f	signature:( void )
kick_watchdog	.\Drivers\Watchdog\watchdog.h	/^void kick_watchdog( void );$/;"	p	signature:( void )
lmin	.\Console\COMMAND.H	/^	MInt lmin;			\/* minimum abbreviated length	*\/$/;"	m	struct:cmd_tbl_s
loadByte	.\Start08.c	/^static void near loadByte(void) {$/;"	f	file:	signature:(void)
log_error	.\Common\error\error.c	/^log_error( MUInt error_num )$/;"	f	signature:( MUInt error_num )
log_error	.\Common\error\error.h	/^void log_error( MUInt error_num );$/;"	p	signature:( MUInt error_num )
lowtxt	.\Drivers\Ioports\iodefs.h	/^	char* lowtxt;$/;"	m
lvd_init	.\Drivers\Platform\LVD\lvd.c	/^lvd_init( void )$/;"	f	signature:( void )
lvd_init	.\Drivers\Platform\LVD\lvd.h	/^void lvd_init( void );$/;"	p	signature:( void )
main	.\Console\console.c	/^main( void )$/;"	f	signature:( void )
main	.\Start08.c	/^__EXTERN_C extern void main(void); \/* prototype of main function *\/$/;"	p	file:	signature:(void)
main	.\main.c	/^main( void )$/;"	f	signature:( void )
main_timer_counter	.\Drivers\Maintime\maintime.c	/^static unsigned short main_timer_counter;$/;"	v	file:
main_timer_interrupt	.\Drivers\Maintime\maintime.c	/^main_timer_interrupt( void )$/;"	f	signature:( void )
main_timer_interrupt	.\Drivers\Maintime\maintime.h	/^void main_timer_interrupt( void );$/;"	p	signature:( void )
mask	.\Drivers\Ioports\iodefs.h	/^	MUInt mask;$/;"	m
maxargs	.\Console\COMMAND.H	/^	MInt maxargs;		\/* maximum number of arguments	*\/$/;"	m	struct:cmd_tbl_s
mch	.\Drivers\Serial\Phylay\sersw.c	/^static const char *mch[] =$/;"	v	file:
mcu_port	.\Drivers\Ioports\iodefs.h	/^	MUInt mcu_port;$/;"	m
mtime	.\Drivers\Platform\RTI\rti.c	/^volatile ushort mtime;$/;"	v
myprintf	.\Common\utils\formats.c	/^myprintf( MUInt ch, const char *fmt, ... )$/;"	f	signature:( MUInt ch, const char *fmt, ... )
myprintf	.\Common\utils\formats.h	/^void myprintf( MUInt ch, const char *fmt, ... );$/;"	p	signature:( MUInt ch, const char *fmt, ... )
n	.\Console\console.c	/^static MUInt n;$/;"	v	file:
name	.\Console\COMMAND.H	/^	char *name;			\/* command name					*\/$/;"	m	struct:cmd_tbl_s
none	.\Drivers\Maintime\config\mtimetbl.c	/^none( void )$/;"	f	signature:( void )
num_elems	.\Drivers\Serial\gsqueue\gsqueue.h	/^	MUInt num_elems;$/;"	m
number	.\Drivers\Ioports\iodefs.h	/^	char* number;$/;"	m
outport	.\Drivers\Ioports\ioports.c	/^outport( const PORT_TABLE *pport, unsigned char value )$/;"	f	signature:( const PORT_TABLE *pport, unsigned char value )
outport	.\Drivers\Ioports\ioports.h	/^MInt outport( const PORT_TABLE *pport, unsigned char value );$/;"	p	signature:( const PORT_TABLE *pport, unsigned char value )
outport_hdl	.\Drivers\Ioports\porthdl.c	/^outport_hdl( MUInt mcu_port, unsigned char value )$/;"	f	signature:( MUInt mcu_port, unsigned char value )
outport_hdl	.\Drivers\Ioports\porthdl.h	/^MInt outport_hdl( MUInt mcu_port, unsigned char value );$/;"	p	signature:( MUInt mcu_port, unsigned char value )
p	.\Console\console.c	/^static char *p;$/;"	v	file:
parity	.\Drivers\Serial\serdefs.h	/^	MUInt parity;$/;"	m
parse_line	.\Console\console.c	/^parse_line( char *line, char *argv[] )$/;"	f	file:	signature:( char *line, char *argv[] )
pin	.\Drivers\Serial\gsqueue\gsqueue.h	/^	ELEM_TYPE *pin;$/;"	m
pint	.\Drivers\Enaint\enaint.c	/^static signed char int_stack[ MAX_INT_STACK ], *pint;$/;"	v	file:
platform_init	.\Drivers\Platform\platform.c	/^platform_init(void)$/;"	f	signature:(void)
platform_init	.\Drivers\Platform\platform.h	/^void platform_init(void);$/;"	p	signature:(void)
pop	.\Drivers\Enaint\enaint.c	/^pop( void )$/;"	f	file:	signature:( void )
port0_pintbl	.\Drivers\Ioports\iodefs.c	/^const PIN_TABLE port0_pintbl[] =$/;"	v
port1_pintbl	.\Drivers\Ioports\iodefs.c	/^const PIN_TABLE port1_pintbl[] =$/;"	v
port2_pintbl	.\Drivers\Ioports\iodefs.c	/^const PIN_TABLE port2_pintbl[] =$/;"	v
port3_pintbl	.\Drivers\Ioports\iodefs.c	/^const PIN_TABLE port3_pintbl[] =$/;"	v
port4_pintbl	.\Drivers\Ioports\iodefs.c	/^const PIN_TABLE port4_pintbl[] =$/;"	v
port5_pintbl	.\Drivers\Ioports\iodefs.c	/^const PIN_TABLE port5_pintbl[] =$/;"	v
port6_pintbl	.\Drivers\Ioports\iodefs.c	/^const PIN_TABLE port6_pintbl[] =$/;"	v
port_tbl	.\Drivers\Ioports\iodefs.c	/^const PORT_TABLE port_tbl[] =$/;"	v
ports	.\Drivers\Ioports\porthdl.c	/^unsigned char ports[NUM_PORTS];$/;"	v
ports_init	.\Drivers\Platform\IO\ioportsl.c	/^ports_init(void)$/;"	f	signature:(void)
ports_init	.\Drivers\Platform\IO\ioportsl.h	/^void ports_init(void);$/;"	p	signature:(void)
ports_str	.\Drivers\Platform\IO\ioportsl.c	/^PORT_STR ports_str[NUM_PORTS];$/;"	v
pout	.\Drivers\Serial\gsqueue\gsqueue.h	/^	ELEM_TYPE *pout;$/;"	m
ppintbl	.\Drivers\Ioports\iodefs.h	/^	const PIN_TABLE *ppintbl;$/;"	m
print_prompt	.\Console\console.c	/^print_prompt( void )$/;"	f	file:	signature:( void )
process_in_char	.\Console\console.c	/^process_in_char( char c )$/;"	f	file:	signature:( char c )
prompt	.\Console\console.c	/^static const char prompt[] = ">>";$/;"	v	file:
ptimeact	.\Drivers\Maintime\mtimetyp.h	/^	void (* const *ptimeact)( void );$/;"	m
pup	.\Drivers\Platform\IO\ioportsl.h	/^	unsigned char pup;$/;"	m
push	.\Drivers\Enaint\enaint.c	/^push( MUInt enable_status )$/;"	f	file:	signature:( MUInt enable_status )
put_char	.\Drivers\Serial\serial.c	/^put_char( MUInt channel, const unsigned char c )$/;"	f	signature:( MUInt channel, const unsigned char c )
put_char	.\Drivers\Serial\serial.h	/^void put_char( MUInt channel, const unsigned char c );$/;"	p	signature:( MUInt channel, const unsigned char c )
put_gsqueue	.\Drivers\Serial\gsqueue\gsqueue.c	/^put_gsqueue( QHDLR qh, ELEM_TYPE elem )$/;"	f	signature:( QHDLR qh, ELEM_TYPE elem )
put_gsqueue	.\Drivers\Serial\gsqueue\gsqueue.h	/^MInt put_gsqueue( QHDLR qh, ELEM_TYPE elem );$/;"	p	signature:( QHDLR qh, ELEM_TYPE elem )
put_nchar	.\Drivers\Serial\serial.c	/^put_nchar( MUInt channel, const unsigned char *p, ushort qty )$/;"	f	signature:( MUInt channel, const unsigned char *p, ushort qty )
put_nchar	.\Drivers\Serial\serial.h	/^void put_nchar( MUInt channel, const unsigned char *p, ushort qty );$/;"	p	signature:( MUInt channel, const unsigned char *p, ushort qty )
put_string	.\Drivers\Serial\serial.c	/^put_string( MUInt channel, const char *p )$/;"	f	signature:( MUInt channel, const char *p )
put_string	.\Drivers\Serial\serial.h	/^void put_string( MUInt channel, const char *p );$/;"	p	signature:( MUInt channel, const char *p )
queue	.\Drivers\Serial\gsqueue\gsqueue.h	/^	ELEM_TYPE *queue;$/;"	m
read_adc	.\Drivers\Ioports\ioports.c	/^read_adc( const PIN_TABLE *ppin, const PORT_TABLE *pport, int *val )$/;"	f	signature:( const PIN_TABLE *ppin, const PORT_TABLE *pport, int *val )
read_adc	.\Drivers\Ioports\ioports.h	/^MInt read_adc( const PIN_TABLE *ppin, const PORT_TABLE *pport, int *val );$/;"	p	signature:( const PIN_TABLE *ppin, const PORT_TABLE *pport, int *val )
read_adc_ch	.\Drivers\Platform\ADC\adc.c	/^read_adc_ch( MUInt channel )$/;"	f	signature:( MUInt channel )
read_adc_ch	.\Drivers\Platform\ADC\adc.h	/^unsigned short read_adc_ch( MUInt channel );$/;"	p	signature:( MUInt channel )
read_adc_hdl	.\Drivers\Ioports\porthdl.c	/^read_adc_hdl( MUInt mcu_port, unsigned char mask )$/;"	f	signature:( MUInt mcu_port, unsigned char mask )
read_adc_hdl	.\Drivers\Ioports\porthdl.h	/^int read_adc_hdl( MUInt mcu_port, unsigned char mask );$/;"	p	signature:( MUInt mcu_port, unsigned char mask )
read_input	.\Drivers\Ioports\ioports.c	/^read_input( const PIN_TABLE *ppin, const PORT_TABLE *pport )$/;"	f	signature:( const PIN_TABLE *ppin, const PORT_TABLE *pport )
read_input	.\Drivers\Ioports\ioports.h	/^MInt read_input( const PIN_TABLE *ppin, const PORT_TABLE *pport );$/;"	p	signature:( const PIN_TABLE *ppin, const PORT_TABLE *pport )
read_input_hdl	.\Drivers\Ioports\porthdl.c	/^read_input_hdl( MUInt mcu_port, unsigned char mask )$/;"	f	signature:( MUInt mcu_port, unsigned char mask )
read_input_hdl	.\Drivers\Ioports\porthdl.h	/^MInt read_input_hdl( MUInt mcu_port, unsigned char mask );$/;"	p	signature:( MUInt mcu_port, unsigned char mask )
refresh_ports	.\Drivers\Platform\IO\ioportsl.c	/^refresh_ports( void )$/;"	f	signature:( void )
refresh_ports	.\Drivers\Platform\IO\ioportsl.h	/^void refresh_ports( void );$/;"	p	signature:( void )
remove_gsqueue	.\Drivers\Serial\gsqueue\gsqueue.c	/^remove_gsqueue( QHDLR qh, ELEM_TYPE *elem )$/;"	f	signature:( QHDLR qh, ELEM_TYPE *elem )
remove_gsqueue	.\Drivers\Serial\gsqueue\gsqueue.h	/^MInt remove_gsqueue( QHDLR qh, ELEM_TYPE *elem );$/;"	p	signature:( QHDLR qh, ELEM_TYPE *elem )
reset_now	.\Drivers\Watchdog\reset.h	/^void reset_now( void );$/;"	p	signature:( void )
reset_now	.\Drivers\Watchdog\watchdog.c	/^reset_now( void )$/;"	f	signature:( void )
rti_ctrl	.\Drivers\Platform\RTI\rti.c	/^rti_ctrl( MUInt ctrl )$/;"	f	signature:( MUInt ctrl )
rti_ctrl	.\Drivers\Platform\RTI\rti.h	/^void rti_ctrl( MUInt ctrl );$/;"	p	signature:( MUInt ctrl )
rti_handler	.\Drivers\Platform\RTI\rti.c	/^rti_handler( void )$/;"	f	signature:( void )
run_command	.\Console\console.c	/^run_command( char *cmd )$/;"	f	file:	signature:( char *cmd )
schar	.\Common\mytypes.h	/^typedef signed char		schar;$/;"	t
sci_br_tbl	.\Drivers\Platform\SCI\scibrtbl.c	/^const unsigned short sci_br_tbl[NUM_BAUD] =$/;"	v
sem_disable	.\Drivers\Enaint\enaint.c	/^sem_disable( void )$/;"	f	signature:( void )
sem_disable	.\Drivers\Enaint\enaint.h	/^void sem_disable( void );$/;"	p	signature:( void )
sem_disable	.\Drivers\Enaint\enaint.h	26;"	d
sem_enable	.\Drivers\Enaint\enaint.c	/^sem_enable( void )$/;"	f	signature:( void )
sem_enable	.\Drivers\Enaint\enaint.h	/^void sem_enable( void );$/;"	p	signature:( void )
sem_enable	.\Drivers\Enaint\enaint.h	42;"	d
serial_default	.\Drivers\Serial\sertable.c	/^const SERIAL_T serial_default[] =$/;"	v
serial_init	.\Drivers\Serial\serial.c	/^serial_init( MUInt channel )$/;"	f	signature:( MUInt channel )
serial_init	.\Drivers\Serial\serial.h	/^void serial_init( MUInt channel );$/;"	p	signature:( MUInt channel )
serlog_sendchar	.\Drivers\Serial\serlog.c	/^serlog_sendchar( MUInt channel, const unsigned char *p )$/;"	f	signature:( MUInt channel, const unsigned char *p )
serlog_sendchar	.\Drivers\Serial\serlog.h	/^void serlog_sendchar( MUInt channel, const unsigned char *p );$/;"	p	signature:( MUInt channel, const unsigned char *p )
serlog_setbd	.\Drivers\Serial\serlog.c	/^serlog_setbd( MUInt channel, MUInt bd)$/;"	f	signature:( MUInt channel, MUInt bd)
serlog_setbd	.\Drivers\Serial\serlog.h	/^void serlog_setbd( MUInt channel, MUInt bd);$/;"	p	signature:( MUInt channel, MUInt bd)
set_baudrate	.\Drivers\Serial\serial.c	/^set_baudrate( MUInt channel, MUInt bd )$/;"	f	signature:( MUInt channel, MUInt bd )
set_baudrate	.\Drivers\Serial\serial.h	/^void set_baudrate( MUInt channel, MUInt bd );$/;"	p	signature:( MUInt channel, MUInt bd )
set_cmd_timeout	.\Console\contick.c	/^set_cmd_timeout( MUInt tout )$/;"	f	signature:( MUInt tout )
set_cmd_timeout	.\Console\contick.h	/^void set_cmd_timeout( MUInt tout );$/;"	p	signature:( MUInt tout )
set_dir_phymed	.\Drivers\Serial\Phylay\phylay.c	/^set_dir_phymed( MUInt dir )$/;"	f	signature:( MUInt dir )
set_dir_phymed	.\Drivers\Serial\Phylay\phylay.h	/^void set_dir_phymed( MUInt dir );$/;"	p	signature:( MUInt dir )
set_output	.\Drivers\Ioports\ioports.c	/^set_output( const PIN_TABLE *ppin, const PORT_TABLE *pport )$/;"	f	signature:( const PIN_TABLE *ppin, const PORT_TABLE *pport )
set_output	.\Drivers\Ioports\ioports.h	/^MInt set_output( const PIN_TABLE *ppin, const PORT_TABLE *pport );$/;"	p	signature:( const PIN_TABLE *ppin, const PORT_TABLE *pport )
set_output_hdl	.\Drivers\Ioports\porthdl.c	/^set_output_hdl( MUInt mcu_port, MUInt mask )$/;"	f	signature:( MUInt mcu_port, MUInt mask )
set_output_hdl	.\Drivers\Ioports\porthdl.h	/^MInt set_output_hdl( MUInt mcu_port, MUInt mask );$/;"	p	signature:( MUInt mcu_port, MUInt mask )
set_sersw	.\Drivers\Serial\Phylay\sersw.c	/^set_sersw( MUInt ch )$/;"	f	signature:( MUInt ch )
set_sersw	.\Drivers\Serial\Phylay\sersw.h	/^void set_sersw( MUInt ch );$/;"	p	signature:( MUInt ch )
sleep	.\Drivers\Sleep\sleep.c	/^sleep( unsigned short msec )$/;"	f	signature:( unsigned short msec )
sleep	.\Drivers\Sleep\sleep.h	/^void sleep( unsigned short msec );$/;"	p	signature:( unsigned short msec )
tab_seq	.\Console\console.c	/^static const char tab_seq[] = "        ";$/;"	v	file:
tcmd	.\Console\contick.c	/^MUInt tcmd;$/;"	v
tick	.\Drivers\Sleep\sleep.c	/^static unsigned short tick;$/;"	v	file:
timer	.\Drivers\Maintime\mtimetyp.h	/^	unsigned short timer;$/;"	m
timer_chain	.\Drivers\Maintime\config\mtimetbl.c	/^const TIMER_CHAIN timer_chain[] =$/;"	v
toCopyDownBegOffs	.\Start08.c	100;"	d	file:
toCopyDownBegOffs	.\Start08.c	98;"	d	file:
uchar	.\Common\mytypes.h	/^typedef unsigned char	uchar;$/;"	t
uint	.\Common\mytypes.h	/^typedef unsigned int	uint;$/;"	t
ulong	.\Common\mytypes.h	/^typedef unsigned long	ulong;$/;"	t
usage	.\Console\COMMAND.H	/^	char *usage;		\/* Usage message	(short)		*\/$/;"	m	struct:cmd_tbl_s
ushort	.\Common\mytypes.h	/^typedef unsigned short	ushort;$/;"	t
watchdog_tick	.\Drivers\Watchdog\watchdog.c	/^static short watchdog_tick = BWATCHDOG_TICK;$/;"	v	file:
